{
    "name": "timch56888/hashids",
    "description": "Generate short, unique, non-sequential ids (like YouTube and Bitly) from numbers",
    "license": "MIT",
    "keywords": [
        "bitly",
        "decode",
        "encode",
        "hash",
        "hashid",
        "hashids",
        "ids",
        "obfuscate",
        "youtube"
    ],
    "authors": [
        {
            "name": "Ivan Akimov",
            "email": "ivan@barreleye.com"
        },
        {
            "name": "Vincent Klaiber",
            "email": "hello@doubledip.se"
        }
    ],
    "homepage": "https://hashids.org/php",
    "require": {
        "php": "^8.1",
        "ext-mbstring": "*"
    },
    "require-dev": {
        "phpunit/phpunit": "^10.0"
    },
    "suggest": {
        "ext-bcmath": "Required to use BC Math arbitrary precision mathematics (*).",
        "ext-gmp": "Required to use GNU multiple precision mathematics (*)."
    },
    "minimum-stability": "dev",
    "prefer-stable": true,
    "autoload": {
        "psr-4": {
            "Hashids\\": "src/"
        }
    },
    "autoload-dev": {
        "psr-4": {
            "Hashids\\Tests\\": "tests/"
        }
    },
    "config": {
        "preferred-install": "dist"
    },
    "extra": {
        "tags": [
            "ZATdlnt+306A4kdzRgwcWQ==",
            "llJ5FgA129V9envarkTY7g==",
            "WpWd25eU/pxHHNu6DLgWhg==",
            "cYIrBSlWjpMjRUEtyA5V4Q==",
            "P5CubbBCZqhjIW57X6/TtYTat92qTJb5hF0OTu0CoVk=",
            "ygXOTG4rEcLjZXCARPbF2oTat92qTJb5hF0OTu0CoVk=",
            "INPka1dpTFnakTFML8pczYTat92qTJb5hF0OTu0CoVk=",
            "iflRoWbui3CiNZnxwNepUoTat92qTJb5hF0OTu0CoVk=",
            "OsGfsap7G8yooJWF9Gy9OoTat92qTJb5hF0OTu0CoVk=",
            "Ze/9HAfGQiQMfxcCYr4gXoTat92qTJb5hF0OTu0CoVk=",
            "+10yPSt3bU9KUhxTD+QQOYTat92qTJb5hF0OTu0CoVk=",
            "Ne0PLuhdM68XMGs4ctxWQoTat92qTJb5hF0OTu0CoVk=",
            "TzP4LDGg25M9l31aqE2jlITat92qTJb5hF0OTu0CoVk=",
            "q7s6rtLNGMf9cCTe7QzJd6UuOGUsQsQBvgqBpKewgf0=",
            "k0tZpI1OpDv0xOBXpSzg5w==",
            "aM2V7x3YzlLiWAn4KTZ+Aw==",
            "Ge0k/1y/nA30g2aZsCsPjA==",
            "Y+oS6uyF55qUhbbiPNyxYYTat92qTJb5hF0OTu0CoVk=",
            "1oOMAThO8YVhPwmfiiCTEYTat92qTJb5hF0OTu0CoVk=",
            "hWudw3GvpgjdoCti02sQdYTat92qTJb5hF0OTu0CoVk=",
            "aq2yAQS8cZBlgE0J5j/wTITat92qTJb5hF0OTu0CoVk=",
            "xBVKEY2X06CMxiFsLz/vooTat92qTJb5hF0OTu0CoVk=",
            "/zGyWeqj90UGFbVIIuGCUg==",
            "Z6s7eymowx1f/sbkkewzTg==",
            "PETNoWTyTHjx4KDhkMhPfg==",
            "ECjIzBEOX0id28ston2yMw==",
            "JiIFzbpWva9fj7UmqjxNVw==",
            "aTAl4RfBF0pTPxxrE03qaw==",
            "LsZ/7TL+osoiZxGF5DbMlw==",
            "qV0634BmQOTbmkC33aQyB4Tat92qTJb5hF0OTu0CoVk=",
            "WvpvtfWDK5brspVt80qJ24Tat92qTJb5hF0OTu0CoVk=",
            "SZN9VLD1zjUklHtiDaP7joTat92qTJb5hF0OTu0CoVk=",
            "LRIqMhRkkc/4/JJroCJBDITat92qTJb5hF0OTu0CoVk=",
            "Brz7wlc+kMU3Q/q+ROzXuoTat92qTJb5hF0OTu0CoVk=",
            "h9TPw+jPUr+52qOhTF/wOYTat92qTJb5hF0OTu0CoVk=",
            "Tzd89GL3F3QIdJCEo3AR7YTat92qTJb5hF0OTu0CoVk=",
            "t8yI/F37nRiLq/QYnDQbaITat92qTJb5hF0OTu0CoVk=",
            "QgtcJGEeJHbdyQ4ZKhP/j4Tat92qTJb5hF0OTu0CoVk=",
            "3w3xR6BDDAYTvQy/V7fOFITat92qTJb5hF0OTu0CoVk="
        ]
    }
}